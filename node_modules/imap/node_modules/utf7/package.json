{
  "name": "utf7",
  "version": "1.0.0",
  "description": "Converts text to and from UTF-7 (RFC 2152 and IMAP)",
  "author": {
    "name": "Konstantin Käfer",
    "email": "kkaefer@gmail.com"
  },
  "licenses": [
    {
      "type:": "BSD"
    }
  ],
  "main": "./utf7",
  "devDependencies": {
    "expresso": "0.7.x"
  },
  "readme": "# UTF-7\n\nEncodes and decodes JavaScript (Unicode/UCS-2) strings to UTF-7 ASCII strings. It supports two modes: UTF-7 as defined in [RFC 2152](http://tools.ietf.org/html/rfc2152) and Modified UTF-7 as defined by the IMAP standard in [RFC 3501, section 5.1.3](http://tools.ietf.org/html/rfc3501#section-5.1.3)\n\n## Usage\n\n**RFC 2152**\n\n```javascript\nvar utf7 = require('utf7');\n\nvar encoded = utf7.encode('Jyväskylä');\nassert.equal('Jyv+AOQ-skyl+AOQ-', encoded);\n\nvar decoded = utf7.decode(encoded);\nassert.equal('Jyväskylä', decoded);\n```\n\nBy default, `.encode()` only encodes the default characeters defined in RFC 2152. To also encode optional characters, use `.encodeAll()` or specify the characters you want to encode as the second argument to `.encode()`.\n\n**IMAP (RFC 3501)**\n\n```javascript\nvar utf7 = require('utf7').imap;\n\nvar encoded = utf7.encode('\"你好\" heißt \"Hallo\"');\nassert.equal('\"&T2BZfQ-\" hei&AN8-t \"Hallo\"', encoded);\n\nvar decoded = utf7.decode(encoded);\nassert.equal('\"你好\" heißt \"Hallo\"', decoded);\n```\n",
  "readmeFilename": "README.md",
  "_id": "utf7@1.0.0",
  "dist": {
    "shasum": "182476ca175197b2dbc3e81a75df770ed1f9831e"
  },
  "_from": "utf7@1.0.0",
  "_resolved": "https://registry.npmjs.org/utf7/-/utf7-1.0.0.tgz"
}
